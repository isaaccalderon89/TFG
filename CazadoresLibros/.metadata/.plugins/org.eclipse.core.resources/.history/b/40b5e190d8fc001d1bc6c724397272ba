package com.curso.cazadoreslibros.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.curso.cazadoreslibros.model.DetalleOrden;
import com.curso.cazadoreslibros.model.Libro;
import com.curso.cazadoreslibros.model.Orden;
import com.curso.cazadoreslibros.service.LibroService;



@Controller
@RequestMapping("/")
public class HomeController {
	
	@Autowired
	private LibroService libroService;
	
	List<DetalleOrden> detalles = new ArrayList<DetalleOrden>();
	
	Orden orden = new Orden();
	
	@GetMapping("")
	public String home(Model model) {
		System.out.println("*** PROBANDO LA SESION DEL USUARIO ***");
		model.addAttribute("libros", libroService.findAll());
		return "usuario/home";
	}
	
	@GetMapping("librohome/{id}")
	public String libroHome(@PathVariable Integer id, Model model) {
		Libro libro = new Libro();
		Optional<Libro> libroOptional = libroService.get(id);
		libro = libroOptional.get();
		model.addAttribute("libro", libro);
		System.out.println("**** PASANDO POR EL LIBROHOME ****");
		return "usuario/librohome";
	}
	
	@PostMapping("/cart")
	public String addCart(@RequestParam Integer id, @RequestParam Integer cantidad, Model model) {
		DetalleOrden detalleOrden = new DetalleOrden();
		Libro libro = new Libro();
		double sumaTotal = 0;
		
		Optional<Libro> optionalLibro = libroService.get(id);
		System.out.println("Producto añadido id: " + id);
		System.out.println("Producto añadido cantidad: " + cantidad);
		
		libro = optionalLibro.get();
		detalleOrden.setCantidad(cantidad);
		detalleOrden.setPrecio(libro.getPrecio());
		detalleOrden.setTitulo(libro.getTitulo());
		detalleOrden.setTotal(libro.getPrecio()*cantidad);
		detalleOrden.setLibro(libro);
		
		sumaTotal = detalles.stream().mapToDouble(dt -> dt.getTotal()).sum();
		
		orden.setTotal(sumaTotal);
		model.addAttribute("cart", detalles);
		model.addAttribute("orden", orden);
		
		return "usuario/carrito";
	}

}
